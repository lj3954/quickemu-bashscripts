#!/bin/bash
if whoami | grep -q root; then
	echo Cannot run this script as root
	exit
fi
export PATH=$PATH:~/.local/bin/quickemu
command -v quickemu || { git clone https://github.com/quickemu-project/quickemu ~/.local/bin/quickemu 2>&1 > /dev/null && echo Installed quickemu in /home/$(whoami)/.local/bin/quickemu; }
mkdir ~/Documents/VMs 2> /dev/null && echo Created VMs folder at /home/$(whoami)/Documents/VMs.
rm -rf ~/Documents/VMs/.tmp; mkdir ~/Documents/VMs/.tmp
cd ~/Documents/VMs/
echo Available Operating Systems:
quickget PLACEHOLDER | tail -n +3; echo -e '\n'
read -p 'Enter an operating system: ' OS
osoutput=$(quickget $OS 2> ~/Documents/VMs/.tmp/erroroutput.txt)
if cat ~/Documents/VMs/.tmp/erroroutput.txt | grep -q "command not found" > /dev/null || ! echo $osoutput | grep -q ' - Releases: ' > /dev/null; then
	echo -e '\nFailure. Invalid OS.'
	exit
fi
echo "$osoutput" | tail -n +2
read -p 'Enter a release: ' Ver
if echo "$osoutput" | grep -q ' - Editions: '; then
	read -p 'Enter an edition: ' Edition
	read -p 'Enter a revision: ' Rev
		if ! mkdir "$OS $Ver $Edition - Revision $Rev" 2> /dev/null; then
		echo VM already exists. Choose an option
		echo 1. Input a different revision.
		echo 2. Launch the VM anyways.
		echo "3. Delete the preexisting VM, create a new one in it's place"
		read input
		if [[ $input = 1 ]]; then
			ls ~/Documents/VMs/ | grep "$OS $Ver $Edition"
			read -p 'New revision: ' Rev
			if ! mkdir "$OS $Ver $Edition - Revision $Rev" 2> /dev/null; then
				echo Invalid revision. Exiting.
				exit
			fi
		elif [[ $input = 2 ]]; then
			cd "$OS $Ver $Edition - Revision $Rev"
			quickemu -vm $OS-$Ver $Edition.conf
			exit
		elif [[ $input = 3 ]]; then
			rm -rf "$OS $Ver $Edition - Revision $Rev"
			mkdir "$OS $Ver $Edition - Revision $Rev"
		else
			echo Invalid selection. Exiting script.
			exit
		fi
	fi
	cd "$OS $Ver $Edition - Revision $Rev"
	if quickget $OS $Ver $Edition ; then
		echo Success!
		quickemu -vm $OS-$Ver-$Edition.conf
	else
		echo Failure, reverting changes
		rm -rf /home/liam/Documents/VMs/"$OS $Ver $Edition - Revision $Rev"
	fi
else
	read -p 'Enter a revision: ' Rev
	if ! mkdir "$OS $Ver - Revision $Rev" 2> /dev/null; then
		echo VM already exists. Choose an option
		echo 1. Input a different revision.
		echo 2. Launch the VM anyways.
		echo "3. Delete the preexisting VM, create a new one in it's place."
		read input
		if [[ $input = 1 ]]; then
			ls ~/Documents/VMs/ | grep "$OS $Ver"
			read -p 'New revision: ' Rev
			if ! mkdir "$OS $Ver - Revision $Rev" 2> /dev/null; then
				echo Invalid revision. Exiting.
				exit
			fi
		elif [[ $input = 2 ]]; then
			cd "$OS $Ver - Revision $Rev"
			quickemu -vm $OS-$Ver.conf
			exit
		elif [[ $input = 3 ]]; then
			rm -rf "$OS $Ver - Revision $Rev"
			mkdir "$OS $Ver - Revision $Rev"
		else
			echo Invalid selection. Exiting script.
			exit
		fi
	fi
	cd "$OS $Ver - Revision $Rev"
	if quickget $OS $Ver ; then
	echo Success!
	quickemu -vm $OS-$Ver.conf
	else
		echo Failure, reverting changes
		rm -rf /home/liam/Documents/VMs/"$OS $Ver - Revision $Rev"
	fi
fi
rm -rf ~/Documents/VMs/.tmp